name: Playwright Tests

on:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 */1 * * *"

concurrency:
  # Only run once this workflow
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  playwright:
    name: Run Playwright Tests
    continue-on-error: false
    runs-on: ubuntu-latest
    timeout-minutes: 600
    steps:
    - name: Checkout "${{ github.ref }}"
      uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'
    - name: Install dependencies
      run: npm ci

    # Caching Playwright from: https://github.com/microsoft/playwright/issues/7249
    - name: Get installed Playwright version
      id: playwright-version
      run: echo "version=$(npm ls @playwright/test | grep @playwright | sed 's/.*@//')" >> $GITHUB_OUTPUT
    - uses: actions/cache@v3
      id: playwright-cache
      with:
        path: '~/.cache/ms-playwright'
        key: '${{ runner.os }}-playwright-deps-${{ steps.playwright-version.outputs.version }}'
        restore-keys: |
          ${{ runner.os }}-playwright-deps-
    - name: Install Playwright's dependencies
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: npx playwright install --with-deps chromium chrome msedge firefox webkit
    # End of caching

    # Some system dependencies are not cached
    - name: Install Playwright's OS dependencies
      run: npx playwright install-deps

    - name: Run Playwright tests
      env:
        TEST_USERNAME: ${{ secrets.RH_USERNAME }}
        TEST_PASSWORD: ${{ secrets.RH_PASSWORD }}
        TEST_ADMIN_USERNAME: ${{ secrets.RH_USERNAME }}
        TEST_ADMIN_PASSWORD: ${{ secrets.RH_PASSWORD }}
        TEST_2_USERNAME: ${{ secrets.RH_USERNAME_2 }}
        TEST_2_PASSWORD: ${{ secrets.RH_PASSWORD_2 }}
      run: npx playwright test --project chromium
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: "playwright-report-${{ runner.os }}"
        path: playwright-report/
        retention-days: 1
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: "test-results-${{ runner.os }}"
        path: test-results/
        retention-days: 5

    - name: Check results file existence
      id: check_results
      # v1
      uses: andstor/file-existence-action@f02338908d150e00a4b8bebc2dad18bd9e5229b0
      with:
        files: "results.xml"
    - name: Release
      # v1
      uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5
      if: steps.check_results.outputs.files_exists == 'true'
      with:
        tag_name: ${{ github.run_id }}
        files: |
          results.xml
    - name: Google Chat Notification
      # release/v1
      uses: Co-qn/google-chat-notification@b9227d9daa4638c9782a5bd16c4abb86268127a1
      with:
        name: E2E Test
        url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
        status: ${{ job.status }}
      if: failure()
